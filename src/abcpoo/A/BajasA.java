/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package abcpoo.A;

import static abcpoo.A.AltasA.Integrantes;
import abcpoo.Empleado;
import abcpoo.EmpleadoAsalariado;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author RNS
 */
public class BajasA extends javax.swing.JFrame {
public static ArrayList<Empleado> Integrantes = new ArrayList<Empleado>();
    EmpleadoAsalariado uno;
    private final JFrame p;
    int pos;
    /**
     * Creates new form BajasA
     */
    public BajasA(final JFrame p) {
        initComponents();
        this.p = p;
        pos = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNSS = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnBaja = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Ingrese el NSS de la persona que quiera eliminar ");

        txtNSS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNSSActionPerformed(evt);
            }
        });

        jLabel2.setText("NSS");

        btnBaja.setText("Baja");
        btnBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBajaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtNSS, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(btnBaja)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(38, 38, 38))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtNSS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(btnBaja)
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNSSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNSSActionPerformed
        // TODO add your handling code here:
int llave = 0;
        try {
            FileInputStream fi = new FileInputStream("Empleados.dat");
            ObjectInputStream oi = new ObjectInputStream(fi);
            Integrantes = (ArrayList) oi.readObject();
            oi.close();
        } catch (Exception exception) {
            System.out.println("Error -- " + exception.toString());
            System.out.println("Error no se ha creado el archivo ");
        }
        String NSS = txtNSS.getText();
        llave = validarNSS(NSS, Integrantes);
        if (llave == 1) {
            btnBaja.setEnabled(true);
        } else {
            btnBaja.setEnabled(false);
        }  
    }//GEN-LAST:event_txtNSSActionPerformed

    private void btnBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBajaActionPerformed
        // TODO add your handling code here:
        //uno = new EmpleadoAsalariado(txtNombre.getText(),txtApellidos.getText(),txtNSS.getText(),Double.parseDouble(txtSalario.getText()));
        
        String NSS = txtNSS.getText();
        try {
            FileInputStream fi = new FileInputStream("Empleados.dat");
            ObjectInputStream oi = new ObjectInputStream(fi);
            Integrantes = (ArrayList) oi.readObject();
            oi.close();
        } catch (Exception exception) {
            System.out.println("Error -- " + exception.toString());
            System.out.println("Error no se ha creado el archivo ");
        }

        // uno = new EmpleadoAsalariado(txtNombre.getText(),txtApellidos.getText(),txtNSS.getText(),Double.parseDouble(txtSalario.getText()));
        
        
        Integrantes.remove(pos);

        try {
            FileOutputStream fo = new FileOutputStream("Empleados.dat");
            ObjectOutputStream oo = new ObjectOutputStream(fo);
            oo.writeObject(Integrantes);
            oo.flush();
            oo.close();
            System.out.println("Vector almacenado en archivo");
        } catch (IOException exception) {
            System.out.println("Error -- " + exception.toString());
        }

        p.setVisible(true);
        
        this.dispose();
        
    }//GEN-LAST:event_btnBajaActionPerformed

   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBaja;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtNSS;
    // End of variables declaration//GEN-END:variables
 private int validarNSS(String NSS, ArrayList Array) {
        int llave = 0; //Cero significa que no lo ha encontrado uno significa que lo ha encontrado
        int cont =0;
        for (Object empleado : Array) {
            if (empleado instanceof EmpleadoAsalariado) {
                if (((EmpleadoAsalariado) (empleado)).getNss().equals(NSS)) {
                    llave = 1;
                    System.out.println("NSS encontrado");
                    System.out.println("Nombre del NSS encontrado: "
                            + ((EmpleadoAsalariado) (empleado)).getNombre());
                    JOptionPane.showMessageDialog(null, "El NSS se ha encontrado.");
                    pos = cont;
                    break;

                }
                
            }
        cont++;
        }
        return llave;
    }
}
